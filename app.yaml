apiVersion: v1
kind: Template
metadata:
  name: elegante-app-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: elegante
    name: elegante
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: elegante
    name: elegante
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: elegante:latest
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/codequester/elegante.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: elegante
    name: elegante
  spec:
    containers:
    - image: elegante:latest
      imagePullPolicy: Always
      name: elegante
      readinessProbe:
        httpGet:
          path: /actuator/health
          port: 8080
        initialDelaySeconds: 30
        periodSeconds: 3
      lifecycle:
        preStop:
          exec:
            command: ["echo", "'Going to sleep'",";","sleep", "300"]
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        requests:
          cpu: 100m 
          memory: 1Gi 
        limits:
          cpu: 200m 
          memory: 2Gi 
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - elegante
        from:
          kind: ImageStreamTag
          name: elegante:latest
          namespace: lifecycle-hook-impl
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: elegante
    name: elegante
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: elegante
      deploymentconfig: elegante
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: elegante
    name: elegante
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: elegante  